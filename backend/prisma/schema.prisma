generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId      String @id @default(uuid())
  firstName   String
  lastName    String
  email       String @unique
  phoneNumber String @unique
  location    String

  personalWebsite String?
  githubProfile   String?
  // linkedinProfile String?
  // leetcodeProfile String?
  // codechefProfile String?
  // mediumProfile   String?
  // xProfile        String?
  // dribbleProfile  String?

  education   Education[] // only college related info
  skills      Skill[]
  experiences Experience[]
  projects    Project[]
  resume      Resume[]
}

model Education {
  id              String    @id @default(uuid())
  userId          String
  college         String
  degree          Degree
  field           String
  startDate       DateTime
  endDate         DateTime?
  completed       Boolean?
  expectedEndDate DateTime?
  GPA             String?
  CGPA            String?

  description String?

  user User @relation(fields: [userId], references: [userId])
}

model Skill {
  id     String @id @default(uuid())
  userId String
  name   String

  projectId Project[]
  user      User      @relation(fields: [userId], references: [userId])
}

model Experience {
  id          String    @id @default(uuid())
  userId      String
  company     String
  role        String
  startDate   DateTime
  endDate     DateTime?
  description String?

  user User @relation(fields: [userId], references: [userId])
}

model Project {
  id          String        @id @default(uuid())
  userId      String
  title       String
  description String
  links       ProjectLink[]
  startDate   DateTime
  endDate     DateTime?
  skills      Skill[]

  user User @relation(fields: [userId], references: [userId])
}

model ProjectLink {
  id        String   @id @default(uuid())
  type      LinkType
  projectId String
  Project   Project  @relation(fields: [projectId], references: [id])
}

enum LinkType {
  SOURCE_CODE
  DEMO
  WEBSITE
  TESTIMONIAL
}

model Resume {
  id          String   @id @default(uuid())
  userId      String
  generatedAt DateTime @default(now())
  data        String

  user User @relation(fields: [userId], references: [userId])
}

enum Degree {
  BACHELORS
  MASTERS
  BACHELORS_RUNNING
  MASTERS_RUNNING
}
